
Allocating common symbols
Common symbol       size              file

p                   0x4               main.o
p2                  0x4               main.o
isr_table           0x80              soc-hw.o
tic_msec            0x4               soc-hw.o

Memory Configuration

Name             Origin             Length             Attributes
ram              0x0000000000000000 0x0000000000001000
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000000000000                __DYNAMIC = 0x0
                0x0000000000000000                _RAM_START = 0x0
                0x0000000000001000                _RAM_SIZE = 0x1000
                0x0000000000001000                _RAM_END = (_RAM_START + _RAM_SIZE)

.text           0x0000000000000000      0x8f4
                0x0000000000000000                _ftext = .
 *(.text .stub .text.* .gnu.linkonce.t.*)
 .text          0x0000000000000000      0x208 crt0ram.o
                0x0000000000000000                _start
                0x0000000000000140                irq_enable
                0x000000000000014c                irq_disable
                0x0000000000000158                irq_set_mask
                0x0000000000000160                irq_get_mask
                0x0000000000000168                jump
                0x000000000000016c                halt
                0x00000000000001f8                get_sp
                0x0000000000000200                get_gp
 .text          0x0000000000000208      0x424 main.o
                0x0000000000000208                writeint
                0x0000000000000268                test2
                0x0000000000000284                test
                0x00000000000002ac                main
 .text          0x000000000000062c      0x2c8 soc-hw.o
                0x000000000000062c                isr_null
                0x0000000000000630                tic_isr
                0x000000000000065c                prueba
                0x00000000000006d0                irq_handler
                0x0000000000000734                isr_init
                0x0000000000000758                isr_register
                0x0000000000000770                isr_unregister
                0x0000000000000790                msleep
                0x00000000000007cc                nsleep
                0x00000000000007fc                tic_init
                0x0000000000000840                uart_init
                0x0000000000000844                uart_getchar
                0x0000000000000868                uart_putchar
                0x000000000000088c                uart_putstr
                0x00000000000008c0                segments
                0x00000000000008e0                ps2_getchar
                0x00000000000008f4                _etext = .

.rodata         0x00000000000008f4      0x258
                0x00000000000008f4                . = ALIGN (0x4)
                0x00000000000008f4                _frodata = .
 *(.rodata .rodata.* .gnu.linkonce.r.*)
 .rodata.str1.4
                0x00000000000008f4      0x1f0 main.o
                                        0x1f4 (size before relaxing)
 .rodata        0x0000000000000ae4       0x64 main.o
 .rodata.cst4   0x0000000000000b48        0x4 soc-hw.o
 *(.rodata1)
                0x0000000000000b4c                _erodata = .

.data           0x0000000000000b4c       0x20
                0x0000000000000b4c                . = ALIGN (0x4)
                0x0000000000000b4c                _fdata = .
 *(.data .data.* .gnu.linkonce.d.*)
 .data          0x0000000000000b4c        0x0 crt0ram.o
 .data          0x0000000000000b4c        0x8 main.o
                0x0000000000000b4c                glob
 .data          0x0000000000000b54       0x18 soc-hw.o
                0x0000000000000b54                uart0
                0x0000000000000b58                timer0
                0x0000000000000b5c                gpio0
                0x0000000000000b60                spi0
                0x0000000000000b64                ps20
                0x0000000000000b68                BCD0
 *(.data1)
                0x0000000000000b70                _gp = ALIGN (0x10)
 *(.sdata .sdata.* .gnu.linkonce.s.*)
                0x0000000000000b6c                _edata = .

.bss            0x0000000000000b6c       0x8c
                0x0000000000000b6c                . = ALIGN (0x4)
                0x0000000000000b6c                _fbss = .
 *(.dynsbss)
 *(.sbss .sbss.* .gnu.linkonce.sb.*)
 *(.scommon)
 *(.dynbss)
 *(.bss .bss.* .gnu.linkonce.b.*)
 .bss           0x0000000000000b6c        0x0 crt0ram.o
 .bss           0x0000000000000b6c        0x0 main.o
 .bss           0x0000000000000b6c        0x0 soc-hw.o
 *(COMMON)
 COMMON         0x0000000000000b6c        0x8 main.o
                0x0000000000000b6c                p
                0x0000000000000b70                p2
 COMMON         0x0000000000000b74       0x84 soc-hw.o
                0x0000000000000b74                isr_table
                0x0000000000000bf4                tic_msec
                0x0000000000000bf8                _ebss = .
                0x0000000000000bf8                _end = .
                0x0000000000000ffc                PROVIDE (_fstack, ((ORIGIN (ram) + 0x1000) - 0x4))
LOAD crt0ram.o
LOAD main.o
LOAD soc-hw.o
OUTPUT(image elf32-lm32)

.debug_abbrev   0x0000000000000000      0x29e
 .debug_abbrev  0x0000000000000000       0xf2 main.o
 .debug_abbrev  0x00000000000000f2      0x1ac soc-hw.o

.debug_info     0x0000000000000000      0x779
 .debug_info    0x0000000000000000      0x157 main.o
 .debug_info    0x0000000000000157      0x622 soc-hw.o

.debug_line     0x0000000000000000      0x5ef
 .debug_line    0x0000000000000000      0x274 main.o
 .debug_line    0x0000000000000274      0x37b soc-hw.o

.debug_frame    0x0000000000000000      0x160
 .debug_frame   0x0000000000000000       0x50 main.o
 .debug_frame   0x0000000000000050      0x110 soc-hw.o

.debug_loc      0x0000000000000000      0x1e0
 .debug_loc     0x0000000000000000       0xe4 main.o
 .debug_loc     0x00000000000000e4       0xfc soc-hw.o

.debug_pubnames
                0x0000000000000000      0x19d
 .debug_pubnames
                0x0000000000000000       0x51 main.o
 .debug_pubnames
                0x0000000000000051      0x14c soc-hw.o

.debug_pubtypes
                0x0000000000000000       0x98
 .debug_pubtypes
                0x0000000000000000       0x2b main.o
 .debug_pubtypes
                0x000000000000002b       0x6d soc-hw.o

.debug_aranges  0x0000000000000000       0x40
 .debug_aranges
                0x0000000000000000       0x20 main.o
 .debug_aranges
                0x0000000000000020       0x20 soc-hw.o

.debug_str      0x0000000000000000      0x239
 .debug_str     0x0000000000000000       0x9a main.o
                                         0xb0 (size before relaxing)
 .debug_str     0x000000000000009a      0x19f soc-hw.o
                                        0x217 (size before relaxing)

.comment        0x0000000000000000       0x11
 .comment       0x0000000000000000       0x11 main.o
                                         0x12 (size before relaxing)
 .comment       0x0000000000000000       0x12 soc-hw.o

.debug_ranges   0x0000000000000000       0x18
 .debug_ranges  0x0000000000000000       0x18 soc-hw.o
